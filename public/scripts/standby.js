// Generated by CoffeeScript 1.8.0
(function() {
  var CHUNK_SIZE, MAX_PINGS,
    __slice = [].slice;

  MAX_PINGS = 5;

  CHUNK_SIZE = 5;

  $(function() {
    var $progressbar, addToStandBy, cacheLinks, finishedLoading, hideLink, imageUrl, openLink, waitForLoaded;
    document.write = function() {
      var p;
      p = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
      return console.log(p);
    };
    window.onhashchange = function() {
      var hash;
      hash = window.location.hash.substring(1);
      if (hash) {
        return openLink(hash);
      } else {
        return hideLink();
      }
    };
    $progressbar = $('#progressbar');
    cacheLinks = function() {
      var allElements, curr, i, len, stillInLoading, total, _results;
      total = $('.cache:not(.loaded)').length;
      curr = 0;
      stillInLoading = true;
      $progressbar.attr('max', total);
      allElements = $('.cache:not(.loaded)');
      i = 0;
      len = allElements.length;
      _results = [];
      while (i < len) {
        _results.push((function(els) {
          var urls;
          i += CHUNK_SIZE;
          urls = els.map(function(e) {
            return e.href;
          });
          return $.get('/batch', {
            urls: urls
          }, function(htmls) {
            return htmls.forEach(function(html, index) {
              var $el, el, id, iframe;
              el = els[index];
              $el = $(el);
              console.log("fetched " + el.href);
              id = $el.data('id');
              iframe = document.getElementById(id);
              iframe = iframe.contentWindow || iframe.contentDocument.document || iframe.contentDocument;
              iframe.document.open();
              iframe.document.write(html.replace('window.top.location', 'hahaiwin'));
              iframe.document.close();
              $el.on('click', function(e) {
                e.preventDefault();
                $el.addClass('site-link-visited');
                id = $(this).data('id');
                $("#arrow-" + id).addClass('arrow-seen');
                return window.location.hash = id;
              });
              return waitForLoaded(0, iframe, $el, function(el) {
                var pct;
                el.addClass('loaded');
                curr++;
                pct = Math.round(curr / total * 100);
                console.log(pct);
                if (stillInLoading) {
                  if (pct === 100) {
                    stillInLoading = false;
                    return finishedLoading();
                  } else if (pct > 95) {
                    stillInLoading = false;
                    return setTimeout(finishedLoading, 1000);
                  } else {
                    return $progressbar.val(curr);
                  }
                }
              });
            });
          });
        })(allElements.slice(i, i + CHUNK_SIZE).toArray()));
      }
      return _results;
    };
    openLink = function(id) {
      $("#" + id).addClass('fucklightboxes');
      $('#x').show();
      return document.body.style.overflow = 'hidden';
    };
    hideLink = function() {
      $('iframe').removeClass('fucklightboxes');
      $('#x').hide();
      return document.body.style.overflow = 'auto';
    };
    $(document).keyup(function(e) {
      if ((e.which || e.keyCode) === 27) {
        return window.location.hash = "";
      }
    });
    $('.cache').on('click', function() {
      return false;
    });
    imageUrl = '/images/background.png';
    $('<img/>').attr('src', imageUrl).load(function() {
      $(this).remove();
      $('body').css('background-image', "url(" + imageUrl + ")");
      return cacheLinks();
    });
    $('#x').on('click', function() {
      return window.location.hash = "";
    });
    $('.tab-link').on('click', function(e) {
      var $this, tab;
      $this = $(this);
      tab = $this.data('tab');
      return $("li[data-section='" + tab + "']").click();
    });
    waitForLoaded = function(pings, iframe, $el, cb) {
      if (pings > MAX_PINGS || iframe.contentWindow && iframe.contentWindow.document && iframe.contentWindow.document.body && iframe.contentWindow.document.body.innerHTML) {
        return setTimeout((function() {
          return cb($el);
        }), 500);
      } else {
        return setTimeout((function() {
          return waitForLoaded(pings + 1, iframe, $el, cb);
        }), 500);
      }
    };
    finishedLoading = function() {
      $progressbar.val($progressbar.attr('max'));
      $('#landing').addClass('landing');
      return $('#index').addClass('index');
    };
    $('#icons').delegate('li:not(.add-section)', 'click', function(e) {
      var $this;
      $this = $(this);
      $('#icons li').removeClass('selected');
      $this.addClass('selected');
      $('.content-section').removeClass('active-section');
      return $("#" + ($this.data('section'))).addClass('active-section');
    });
    $('#icons li.add-section').on('click', function(e) {
      return $('.modal').modal();
    });
    $('#modal-subreddit').on('keyup', function(e) {
      if (e.keyCode === 13) {
        addToStandBy("reddit", $('#modal-subreddit').val());
        $('.modal').modal('hide');
        return $('#modal-subreddit').val('');
      }
    });
    $('.modal-producthunt').on('click', function(e) {
      addToStandBy("producthunt");
      return $('.modal').modal('hide');
    });
    return addToStandBy = function(service, subreddit) {
      if (subreddit == null) {
        subreddit = "";
      }
      return $.get('/add', {
        service: service,
        subreddit: subreddit
      }, function(posts) {
        var $newTab, html, img, section;
        section = subreddit || service;
        section += "-section";
        img = subreddit ? "Reddit_on.png" : "Product_on.png";
        $newTab = $("<li data-section='" + section + "'><img src='/images/" + img + "'></li>");
        $('#icons .add-section').before($newTab);
        html = "<div id='" + section + "' class='content-section'>";
        posts.forEach(function(post, i) {
          if (subreddit) {
            return html += "<div>\n  <div class='section-link'>\n    <div class='upvotes'>\n      <div class='arrow' id=\"arrow-" + section + "-link-" + i + "\"></div>\n      <div>" + post.score + "</div>\n    </div>\n    <div class='post-data'>\n      <a class='cache site-link' data-id='" + section + "-link-" + i + "' href='" + post.url + "'>" + post.title + "</a>\n      <span class='website'>(" + (post.url.replace('http://', '').replace('https://', '').split(/[\/?#]/)[0]) + ")</span>\n      <a class='cache comments' data-id='" + section + "-comments-" + i + "' href='http://reddit.com" + post.permalink + "'>" + post.num_comments + " comments\n      </a>\n    </div>\n  </div>\n  <iframe sandbox=\"allow-same-origin\" class='content' id='" + section + "-link-" + i + "'></iframe>\n  <iframe class='content' id='" + section + "-comments-" + i + "'></iframe>\n</div>";
          } else {
            return html += "<div>\n  <div class='section-link'>\n    <div class='upvotes'>\n      <div class='arrow'></div>\n      <div>" + post.votes + "</div>\n    </div>\n    <div class='post-data'>\n      <a class='cache site-link' data-id='product-hunt-link-" + i + "' href='" + post.url + "'>" + post.title + "</a>\n      <span class='website'>(" + (post.url.replace('http://', '').replace('https://', '').split(/[\/?#]/)[0]) + ")</span>\n      <a class='cache comments' data-id='product-hunt-comments-" + i + "' href='http://producthunt.com" + post.permalink + "'>" + post.comment_count + " comments</a>\n    </div>\n  </div>\n  <iframe sandbox=\"allow-same-origin\" class='content' id='product-hunt-link-" + i + "'></iframe>\n  <iframe class='content' id='product-hunt-comments-" + i + "'></iframe>\n</div>";
          }
        });
        html += "</div>";
        $('#content-section-wrap').append(html);
        $newTab.click();
        return cacheLinks();
      });
    };
  });

}).call(this);
